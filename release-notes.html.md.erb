---
title: Release Notes
owner: MySQL
---

<strong><%= modified_date %></strong>

These are the release notes for <%= vars.product_full %>.


## <a id="1-0-0"></a> Version 1.1.0

**Release Date: August 12, 2021**


### Compatibility

The following components are compatible with this release:

<table border="1" class="nice">

  <tr>
    <th>Component</th>
    <th>Version</th>
  </tr>

  <tr><td>Percona Server</td><td>8.0.25</td></tr>
  <tr><td>Percona XtraBackup</td><td>8.0.25</td></tr>

</table>


### Features

New features in this release:

* Release 1.1.0 supports MySQL Server 8.0.25. For details on MySQL Server 8.0.25 see [MySQL Release notes](https://dev.mysql.com/doc/relnotes/mysql/8.0/en/news-8-0-25.html)
* Release 1.1.0 supports Percona XtraBackup 8.0.25. For details on Percona XtraBackup 8.0.25 see [Percona XtraBackup Release Notes](https://www.percona.com/doc/percona-xtrabackup/LATEST/release-notes/8.0/8.0.25-17.0.html).
* Tanzu MySQL instances are now created with a version number. Users may specify the `spec.version` field in the instance `yaml` to specify which Tanzu MySQL version to deploy. Users can now list instances by version number. For more details see [List Instances By Versioin](upgrade-instance.html).
* <%= vars.product_short %> now requires installing Cert Manager before creating or updating new instances. For more details, see [Prerequisites](install-operator.html#prereq).
* <%= vars.product_short %> instances now expose Prometheus compatible metrics endpoints using `mysql_exporter`. Metrics are secured behind a self-signed TLS certificate. For more details see [Monitoring MySQL Instances in Kubernetes](monitoring.html).

### Changes

- `instanceImage` has been deprecated and removed from the Helm chart. This release introcuces two new chart values, `registry` and `defaultInstanceVersion`. Users should specify `registry: <my.private-registry>` in their `values-override.yaml`. For more details see [Installing the Tanzu SQL for Kubernetes Operator](install-operator.html).
- `imagePullSecret` has been renamed to `imagePullSecretName`. This applies to both the Helm chart and the MySQL resource. Users who are maintaining a deployment file for the object should take care to rename the field or drop the field entirely since it is now optional. If omitted, the image pull secret name will default to what the service administrator has configured in the helm chart.



### Known Issues

This release has the following known issues:

* **Scaling down an HA instance is not supported**: Creating an HA instance and scaling back to a single pod is not supported and may incur data loss. The <%= vars.product_full %> operator does not prevent you from changing the property, and changing the property will result in unknown behavior.
  If the pods for an HA instance crash while the cluster and its metadata are still being created, the cluster may not recover automatically.
* **Pods may restart when creating a HA instance**: Proxy pods may spontaneously restart while the cluster is being initialized.

### Limitations
* HA instances have no anti-affinity capability, so the pods of an HA instance may be scheduled to the same Kubernetes node.
* Backups are only supported on S3-compatible blobstores that support the S3 ListObjectsV2 API. Notably, Google Cloud Storage (GCS) does not support this API in its S3-compatibility mode.
* Changing `spec.storageSize` in a MySQL object to scale the PersistentVolume is not supported. See [Scale storageSize](./update-instance.html#scale-storage) for a workaround that expands the PersistentVolume.
* To rotate MySQL system account passwords, you must manually restart the pods. For details, see [Rotating MySQL Credentials](./rotating-credentials.html).
* TLS is required for external connections to the database. There is no supported option to disable this requirement.
* Some common operations require an administrator to run `kubectl exec` to access a pod. Some examples are:
   * Checking for an HA instance that is not tolerant to additional members leaving the replication group.
   * Configuring schemas and users for an application.
* Backups are unencrypted. Enable S3 server-side encryption and ensure that the MySQLBackupLocation object is configured with a secure endpoint (`spec.endpoint` should begin with `https://`). For more on server-side encryption, see the [AWS documentation](https://docs.aws.amazon.com/AmazonS3/latest/userguide/serv-side-encryption.html).


## <a id="1-0-0"></a> Version 1.0.0

**Release Date: April 15, 2021**

This is the first generally available (GA) release of <%= vars.product_full %>.
For an overview of this product, see [About <%= vars.product_short %>](index.html#about-mysql4k8s).

### Compatibility

The following components are compatible with this release:

<table border="1" class="nice">

  <tr>
    <th>Component</th>
    <th>Version</th>
  </tr>

  <tr><td>Percona Server</td><td>8.0.22–13</td></tr>
  <tr><td>Percona XtraBackup</td><td>8.0.23–16</td></tr>

</table>


### Features

New feature in this release:

* **High Availability:** Support for creating a high-availability cluster configuration with three members.
  For information, see [Architecture](architecture.html) and 
  [Configuring MySQL Instances for High Availability](high-availability.html).

### Known Issues

This release has the following known issues:

* **Upgrades from beta releases are not supported:** Upgrades from beta releases to the <%= vars.product_full %>
  v1.0.0 release are not supported.
  Download and install the latest version.
* **Scaling down an HA instance is not supported**: Creating an HA instance and scaling back to a single pod is not supported and may incur data loss. The <%= vars.product_full %> operator does not prevent you from changing the property, and changing the property will result in unknown behavior.
  If the pods for an HA instance crash while the cluster and its metadata are still being created, the cluster may not recover automatically.
* **Pods may restart when creating a HA instance**: Proxy pods may spontaneously restart while the cluster is being initialized.

### Limitations
* HA instances have no anti-affinity capability, so the pods of an HA instance may be scheduled to the same Kubernetes node.
* Backups are only supported on S3-compatible blobstores that support the S3 ListObjectsV2 API. Notably, Google Cloud Storage (GCS) does not support this API in its S3-compatibility mode.
* Changing `spec.storageSize` in a MySQL object to scale the PersistentVolume is not supported. See [Scale storageSize](./update-instance.html#scale-storage) for a workaround that expands the PersistentVolume.
* To rotate MySQL system account passwords, you must manually restart pods. For details, see [Rotating MySQL Credentials](./rotating-credentials.html).
* TLS is required for external connections to the database. There is no supported option to disable this requirement.
* Some common operations require an administrator to run `kubectl exec` to access a pod. Some examples are:
   * Checking for an HA instance that is not tolerant to additional members leaving the replication group.
   * Configuring schemas and users for an application.
* Backups are unencrypted. Enable S3 server-side encryption and ensure that the MySQLBackupLocation object is configured with a secure endpoint (`spec.endpoint` should begin with `https://`). For more on server-side encryption, see the [AWS documentation](https://docs.aws.amazon.com/AmazonS3/latest/userguide/serv-side-encryption.html).



