---
title: Connecting an App to the Tanzu MySQL Instance
owner: MySQL
---

<%= partial '../../mysql-k8s/partials/mysql-k8s/product-beta-warning' %>

<strong><%= modified_date %></strong>

This topic explains how to connect an app to your <%= vars.product_full %> instance.

## <a id='AboutTile'></a>About Binding Apps to a <%= vars.product_full %> instance

QUICK verbal description about what we're doing here. 

After you, as a developer, have created a <%= vars.product_full %> instance,
the next task is to bind it to your app so that....

WHAT's the other term for binding? 

DOES this apply to all apps or just "PCF" apps? 

## <a id='prereq'></a>Prerequisites

Before you bind an app to a <%= vars.product_full %> instance, you must have:

* Prerequisite. See [Link]().
* Prerequisite. See [Link]().

* The Kubernetes Command Line Interface (kubectl).
  See [Installing the Kubernetes CLI](https://docs.pivotal.io/tkgi/installing-kubectl-cli.html)

* Permission to read Kubernetes secrets in your target namespace. [X-REF]

<p class="note"><strong>Note: </strong>To avoid Kubernetes permissions issues,
   VMware recommends that developers have <code>namespace-scoped</code> admin access
   to their target namespace.


## <a id='retrieve-creds'></a>Retrieve the MySQL Credentials

To retrieve the MySQL credentials:


1. Output the random string that is the MySQL credentials for XXX by running:

    ```
    kubectl get secret INSTANCE-NAME-credentials -o jsonpath='{.data.rootPassword}' | base64 -D
    ```

    Where is `INSTANCE-NAME` is the XXX.

    For example:

    <pre class="terminal">
    $ kubectl get secret niceinstancename-credentials -o jsonpath='{.data.rootPassword}' | base64 -A
ithLtGMmuZS0aksLK7imblrkjkv
 </pre> 



     DO I get only a random string as the output?     

     "Output should be a random string such as `ithLtGMmuZS0aksLK7imblrkjkv0`

     * Username is always “root” — DOES this mean that the jsonpath is always jsonpath='{.data.rootPassword}'?


## <a id='connect-app'></a>Connect your App to the <%= vars.product_short %> Database
Connect your App to the <%= vars.product_short %> Database

* App needs to be in the same Kubernetes cluster because we only have a ClusterIP.
For more information, see [K8s](https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types).

* Can be in a different namespace
* Configure your App’s environment variables with the MySQL username “root” and password as what you retrieved * earlier.
