---
title: VMware Tanzuâ„¢ SQL with MySQL for Kubernetes (Beta)
owner: MySQL
---

<%= partial '../../mysql-k8s/partials/mysql-k8s/product-beta-warning' %>

<strong><%= modified_date %></strong>

This topic provides an overview of <%= vars.product_full %> (<%= vars.product_short %>).

## <a id='overview'></a>Overview

<%= vars.product_short %> is a Kubernetes operator that automates provisioning, management, and operations of dedicated
MySQL instances running on Kubernetes. MySQL instances provisioned by <%= vars.product_short %> are configured with
secure and performant settings by default to meet application developer expectations for a general-use relational
database.

Kubernetes operators are software extensions to Kubernetes that provide custom resources for management of applications,
services and their components.

The operator provides a consistent and easy way to deploy MySQL instances to Kubernetes and run them, including "day
two" (continuous) operations. MySQL instances deployed using the operator can be used by applications running on
Kubernetes or outside of Kubernetes.

<%= vars.product_short %> packages a collection of open source software to help you deploy and manage one or more
instances of the MySQL database on Kubernetes. It includes the following components:

  * [Percona Server 8.0](https://www.percona.com/software/mysql-database/percona-server)
  * [Percona XtraBackup 8.0](https://www.percona.com/software/mysql-database/percona-xtrabackup)

**[Chris] Can we use this as a basis? http://postgres-kubernetes-wip.cfapps.io/1-0/about.html**

## <a id='about-mysql4k8s'></a>About <%= vars.product_short %>
* About <%= vars.product_short %>

### <a id='about-mysql-8-0'></a>About MySQL 8.0
* Brief Summary

MySQL is a powerful open-source relational database used by apps since the mid-90s. Developers have relied on MySQL as a
first step to storing, processing and sharing data. As its user community has grown, MySQL has become a robust system
capable of handling a wide variety of use cases and very significant workloads. Unlike other traditional databases which
centralize and consolidate data, MySQL lends itself to dedicated deployment supporting building "cloud native" apps.

[What is MySQL](https://dev.mysql.com/doc/refman/8.0/en/what-is-mysql.html)

#### <a id='features-mysql-8-0'></a>MySQL 8.0 Features
* What features are offered in MySQL v8.0?

  Major features of MySQL 8.0 include:

  * Multi-Version Concurrency Control (MVCC)
  * Tablespaces
  * Asynchronous replication
  * Nested transactions (savepoints)
  * Online/hot backups
  * Redo logging for fault tolerance
  * Crash-safe DDL
  * Unicode
  * NoSQL Document Store interface
  * Native JSON datatype
  * Native Geographic Information System (GIS) support

## <a id='mysql4k8s-architecture'></a><%= vars.product_short %> Architecture
* <%= vars.product_short %> Architecture

TODO: Some architecture image of our product

tanzu operator

[service]
[statefulset]
[pod/mysql-0] (mysql, backups container)
[secrets/...credentials]
[pvc]
  |
[s3 storage of backups]


### <a id='operator-framework'></a>Operator Framework
* Operator Framework
  TODO:  Why?  Is this just an interesting factoid?  Do other Tanzu products advertise "controller-runtime" or something?

### <a id='controllers-crds'></a>Controllers and Custom Resource Definitions (CRDs)
* Controllers and Custom Resource Definitions (CRDs)

## <a id='rto-rpo-characteristics'></a>RTO and RPO Characteristics
Recovery Time Objective (RTO) and Recovery Point Objective (RPO) are metrics used to assess the availability of a SERVICE/CLUSTER/? during an outage.

### <a id='rto-downtime'></a>Expected Downtime
* Expected downtime for different types of outages - (RTO)
 * Pod gets rescheduled? K8s cluster loses network connectivity? etc.

### <a id='rpo-data-loss'></a>Data Loss
* How much data is lost for different types of outages - (RPO)

## <a id='requirements'></a>Platform Requirements
**[Chris] Can we use this as a basis? http://postgres-kubernetes-wip.cfapps.io/1-0/prerequisites.html**

* Platform Requirements
* Works on any Kubernetes v1.18+
* Tested on Minikube, TKG, and GKE

## <a id='license'></a> License
This product is distributed under the
[VMware Pre-Release EULA](https://network.pivotal.io/legal_documents/pivotal_beta_eula) license.

### <a id="gen-limits"></a> General Limitations

* This product is currently in beta. VMware does not provide commercial support.
* This product is intended to be used with any Kubernetes distribution >= 1.16.
  However, given the number of Kubernetes vendors, versions, and configurations, not all of them have been
  tested with <%= vars.product_short %>.
* Product upgrades are not supported. If you want to test a newer version, delete the previous version first.
