---
title: Updating a Tanzu MySQL Instance
owner: MySQL
---

<%= partial '../../mysql-k8s/partials/mysql-k8s/product-beta-warning' %>

<strong><%= modified_date %></strong>

This topic provides instructions for scaling up/down and changing any other configurations on a
<%= vars.product_full %> instance.

## <a id='prereq'></a>Prerequisites
Before you modify the <%= vars.product_short %> instance, you must:

* Have Access and permissions
* Have CLIs installed
* Etc.

## <a id='scale-storage'></a>Scale storageSize

For storage classes that support it, the storageSize may only be expanded but not reduced.

To scale `storageSize`:

1. Look up the storage class associated with the MySQL Podâ€™s PVC.
  ```bash
  kubectl get pvc mysql-data-<MYSQL-POD-NAME> -o jsonpath='{.spec.storageClassName}'
  ```

1. Check to see if this particular storage class supports volume expansion by looking at the column `ALLOWVOLUMEEXPANSION`.
  ```bash
  # kubectl get storageclass standard
  NAME                 PROVISIONER            RECLAIMPOLICY   VOLUMEBINDINGMODE   ALLOWVOLUMEEXPANSION   AGE
  standard (default)   kubernetes.io/gce-pd   Delete          Immediate           true                   91s
  ```

  > Note: Since v1.11, Kubernetes ships with [volume expansion support](https://kubernetes.io/docs/concepts/storage/persistent-volumes/#expanding-persistent-volumes-claims)
  > for the following in-tree volume plugins: AWS-EBS, GCE-PD, Azure Disk, Azure File, Glusterfs, Cinder, Portworx, and Ceph RBD.
  > CSI volumes and FlexVolumes may also support expansion.
  > Once you've determined that volume expansion is supported for the underlying provider,
  > you may be able to change the `allowVolumeExpansion` field to `true`, if needed,
  > in the StorageClass object(s). Only PVCs created from a StorageClass with `allowVolumeExpansion`
  > set to `true` will be allowed to perform volume expansion.


  > If the output does not show the `ALLOWVOLUMEEXPANSION` column, you can use
  > `kubectl get storageclasses.storage.k8s.io standard -o custom-columns='NAME:.metadata.name,ALLOWVOLUMEEXPANSION:.allowVolumeExpansion'`

1. Edit the PVC configuration's `spec.resources.requests.storage` field to increase the volume size.
  ```bash
  # kubectl edit pvc mysql-data-<MYSQL-POD-NAME>
  persistentvolumeclaim/mysql-data-<MYSQL-POD-NAME> edited
  ```

1. Either:

  a. The `storageClass` supports [online expansion](https://kubernetes.io/docs/concepts/storage/persistent-volumes/#resizing-an-in-use-persistentvolumeclaim).
    Eventually the PVC will be automatically resized, and no further steps are required.

  a. Otherwise, wait for the PVC to have the `FileSystemResizePending` condition, then delete the Pod to unmount the PVC and allow it to resize.
  ```bash
  # kubectl wait --for=condition=FileSystemResizePending pvc/mysql-data-<MYSQL-POD-NAME>
  persistentvolumeclaim/mysql-data-tanzumysql-sample-0 condition met
  # kubectl rollout restart statefulset <MYSQL-INSTANCE-NAME>
  statefulset.apps/tanzumysql-sample restarted
  ```

  Once the Pod is automatically recreated by the statefulset controller and successfully restarts, the user can observe the storage has been resized.
  ```bash
  kubectl exec <MYSQL-POD-NAME> -c mysql -- df -h /var/lib/mysql
  Filesystem      Size  Used Avail Use% Mounted on
  /dev/sdb        3.0G  346M  2.6G  12% /var/lib/mysql
  ```

### <a id='scale-storage-downtime'></a>Expected Downtime

Expected downtime when expanding storage:

- With online expansion, there is no downtime expected.
- With offline expansion, there will be downtime while the pod is recreated and the PVC is being resized.

## <a id='scale-resources'></a>Scaling CPU and Memory Resources

To scale CPU or Memory resources:

1. Edit the TanzuMySQL configuration's `spec.resources` field to increase the CPU or Memory requirements for the `mysql` or `backups` containers.
  ```bash
  # kubectl edit tanzumysql <MYSQL-INSTANCE-NAME>
  tanzumysql.mysql.tanzu.vmware.com/<MYSQL-INSTANCE-NAME> edited
  ```

### <a id='scale-resources-downtime'></a>Expected Downtime

Expected downtime when changing resource reservations:

- Brief downtime while Kubernetes recreates the pods.
- Risk of longer downtime if the new requested values exceed the available capacity of the Kubernetes cluster.

## <a id='other-config'></a>Changing Other Configurations

Changing `storageClassName` or `imagePullSecret` will not have any effect on a running TanzuMySQL instance.
If a TanzuMySQL instance is not running due to errors in these fields, they can be changed, and changes will be propagated into the statefulset to correct the error.

To change `storageClassName` or `imagePullSecret`:

1. Edit the TanzuMySQL configuration's `spec`.
  ```bash
  # kubectl edit tanzumysql <MYSQL-INSTANCE-NAME>
  tanzumysql.mysql.tanzu.vmware.com/<MYSQL-INSTANCE-NAME> edited
  ```
