---
title: Updating a Tanzu MySQL Instance
owner: MySQL
---

<%= partial '../../mysql-k8s/partials/mysql-k8s/product-beta-warning' %>

<strong><%= modified_date %></strong>

This topic describes how to scale or change configurations on a
<%= vars.product_full %> instance.

## <a id='prereq'></a>Prerequisites
Before you update the <%= vars.product_short %> instance, you must:


* Have access and permissions to the <%= vars.product_short %> instance.

* Have the Kubernetes command line tool (kubectl) installed. For more
information, see [Install and Set Up kubectl](https://kubernetes.io/docs/tasks/tools/install-kubectl/)
from the Kubernetes documentation.


## <a id='scale-storage'></a>Scale storageSize

For storage classes that support storageSize, the storageSize can only be expanded but
not reduced.

To scale storageSize:

1. Look up the storage class associated with the MySQL Podâ€™s PVC.
  <pre>
  kubectl get pvc mysql-data-MYSQL-POD-NAME -o jsonpath='{.spec.storageClassName}'
  </pre>

1. Check to see if the storage class supports volume expansion. See the `ALLOWVOLUMEEXPANSION` column.<pre>
kubectl get storageclass standard<br><br>
NAME                 PROVISIONER            RECLAIMPOLICY   VOLUMEBINDINGMODE    ALLOWVOLUMEEXPANSION   AGE
standard (default)   kubernetes.io/gce-pd   Delete          Immediate            true                   91s</pre>

1. If the output does not show the `ALLOWVOLUMEEXPANSION` column, run:
  <pre>kubectl get storageclasses.storage.k8s.io standard -o \
    custom-columns='NAME:.metadata.name,ALLOWVOLUMEEXPANSION:.allowVolumeExpansion'</pre>

1. If you are using Kubernetes v1.11 and volume expansion is supported, change the `allowVolumeExpansion` field to `true`
      in StorageClass objects. Only PVCs created from a StorageClass with `allowVolumeExpansion`
      set to `true` are allowed to perform volume expansion.
      For more information, see the [Kubernetes documentation](https://kubernetes.io/docs/concepts/storage/persistent-volumes/#expanding-persistent-volumes-claims).

1. Edit the PVC configuration's `spec.resources.requests.storage` field to increase the volume size.<pre>
kubectl edit pvc mysql-data->MYSQL-POD-NAME<br><br>
persistentvolumeclaim/mysql-data-MYSQL-POD-NAME edited</pre>

1. Do either of the following:

  1. **If the storageClass supports online expansion:**
    Wait for PVC to automatically resize. For more information, see [Kubernetes documentation](https://kubernetes.io/docs/concepts/storage/persistent-volumes/#resizing-an-in-use-persistentvolumeclaim).<br><br>

  1. **Otherwise:** Wait for the PVC to have the `FileSystemResizePending` condition. Delete the Pod to 
  unmount the PVC and allow it to resize.<pre>
  kubectl wait --for=condition=FileSystemResizePending pvc/mysql-data-MYSQL-POD-NAME
  persistentvolumeclaim/mysql-data-tanzumysql-sample-0 condition met
  <pre>kubectl rollout restart statefulset MYSQL-INSTANCE-NAME statefulset.apps/tanzumysql-sample restarted</pre>

1. After the Pod is automatically re-created by the StatefulSet controller and successfully restarts, the user can observe the storage has been resized.<pre>
kubectl exec MYSQL-POD-NAME -c mysql -- df -h /var/lib/mysql<br><br>
Filesystem      Size  Used Avail Use% Mounted on
/dev/sdb        3.0G  346M  2.6G  12% /var/lib/mysql</pre>

### <a id='scale-storage-downtime'></a>Expected Downtime

You can expected downtime when expanding storage in the following ways:

- **With online expansion:** There is no downtime expected in most cases.
- **With offline expansion:** There is downtime while the Pod is re-created and the
PVC is being resized.

## <a id='scale-resources'></a>Scaling CPU and Memory Resources

To scale CPU or memory resources:

1. Edit the TanzuMySQL configuration's `spec.resources` field to increase the CPU
or Memory requirements for the `mysql` or `backups` containers.
  <pre>
  kubectl edit tanzumysql MYSQL-INSTANCE-NAME <br><br>
  tanzumysql.mysql.tanzu.vmware.com/MYSQL-INSTANCE-NAME edited
  </pre>

### <a id='scale-resources-downtime'></a>Expected Downtime

You can expect downtime when changing resource reservations in the following ways:

- Brief downtime while Kubernetes re-creates the pods.
- Risk of longer downtime if the new requested values exceed the available capacity
of the Kubernetes cluster.

## <a id='other-config'></a>Change Other Configurations

Changing `storageClassName` or `imagePullSecret` does not have any effect on a
running TanzuMySQL instance. If a TanzuMySQL instance is not running due to
errors in these fields, they can be changed, and changes are propagated into the
StatefulSet to correct the error.

To change `storageClassName` or `imagePullSecret`:

1. Edit the TanzuMySQL configuration `spec`.
<pre>
kubectl edit tanzumysql MYSQL-INSTANCE-NAME<br><br>
tanzumysql.mysql.tanzu.vmware.com/MYSQL-INSTANCE-NAME edited</pre>
