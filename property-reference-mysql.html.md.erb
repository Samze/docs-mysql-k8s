---
title: Property Reference for the MySQL Resource
owner: MySQL
---

This topic contains a property reference table for the MySQL resource.
Refer to this table when you are creating the YAML file for a MySQL instance.
For more information, see [Create a Mysql Instance](create-delete-mysql.html#create-instance) in
_Creating and Deleting a MySQL Instance_.

Each Tanzu MySQL release contains an example mysql.yaml with the properties relative to the downloaded release:

```
apiVersion: with.sql.tanzu.vmware.com/v1
kind: MySQL
metadata:
  name: mysql-sample
spec:
  storageSize: 1Gi
#  imagePullSecretName: tanzu-image-registry

#### Set the storage class name to change storage class of the PVC associated with this resource
#  storageClassName: standard

#### Set the type of Service used to provide access to the MySQL database.
#  serviceType: LoadBalancer

#### Set the name of the Secret used for TLS
#  tls:
#    secret:
#      name: mysql-tls-secret

#### Enable highly available cluster
#  highAvailability:
#    enabled: true

#### Enable affinity
#  databasePodConfig:
#    affinity:
#      podAntiAffinity:
#        preferredDuringSchedulingIgnoredDuringExecution:
#          - weight: 1
#            podAffinityTerm:
#              topologyKey: "kubernetes.io/hostname"
#              labelSelector:
#                matchExpressions:
#                  - key: "app.kubernetes.io/component"
#                    operator: In
#                    values:
#                      - database
#                  - key: "app.kubernetes.io/instance"
#                    operator: In
#                    values:
#                      - mysql-sample
#    tolerations:
#    - key: node.kubernetes.io/disk-pressure
#      operator: "Exists"
#      effect: "NoExecute"
#      tolerationSeconds: 3600
#  proxyPodConfig:
#    affinity:
#      podAntiAffinity:
#        preferredDuringSchedulingIgnoredDuringExecution:
#          - weight: 1
#            podAffinityTerm:
#              topologyKey: "kubernetes.io/hostname"
#              labelSelector:
#                matchExpressions:
#                  - key: "app.kubernetes.io/component"
#                    operator: In
#                    values:
#                      - proxy
#                  - key: "app.kubernetes.io/instance"
#                    operator: In
#                    values:
#                      - mysql-sample
#    tolerations:
#    - key: node.kubernetes.io/memory-pressure
#      operator: "Exists"
#      effect: "NoExecute"
#      tolerationSeconds: 3600

#### Examples to set resource limit/request for mysql/backup containers.
#  resources:

#### This is the container running the mysql server.
#    mysql:
#      requests:
#        cpu: 750m
#        memory: 500Mi
#      limits:
#        cpu: '1.0'
#        memory: 800Mi

#### This is the sidecar container that manages backups and innodb cluster operations
#    mysqlSidecar:
#      requests:
#        cpu: 100m
#        memory: 50Mi
#      limits:
#        cpu: 250m
#        memory: 75Mi

#### This is the container that proxies connections to MySQL
#    proxy:
#      requests:
#        cpu: 200m
#        memory: 48Mi
#      limits:
#        cpu: '1.0'
#        memory: 256Mi

#### This is the container that exports metrics
#    metrics:
#      requests:
#        cpu: 100m
#        memory: 32Mi
#      limits:
#        cpu: 250m
#        memory: 75Mi
```


The table below explains the properties that you can set in your MySQL resource.

<table class="nice">
<col width="20%">
<col width="60%">
<col width="20%">
<th>Property</th>
<th>Information</th>
<th>Example</th>
<tr>
  <td><code>metadata.name</code></td>
  <td>The name of the MySQL instance. Must be unique within a namespace. 
      Cannot be modified after the MySQL instance has been created.
      For more information, see the <a href="http://kubernetes.io/docs/user-guide/identifiers#names">Kubernetes documentation</a>.<br /><br />
      <strong>Type:</strong> String<br />
      <strong>Required</strong><br />
      <strong>Default:</strong> <em>n/a</em></td>
  <td><code>my&#8209;instance</code></td>
</tr>
<tr>
  <td><code>spec.storageSize</code></td>
  <td>The size of the persistent volume claims (PVCs) for MySQL instance Pods.
      After being set, cannot be reduced, but can be increased.
      For information about allowed size units, see discussion about resource quantities in
      the <a href="https://github.com/kubernetes/community/blob/master/contributors/design-proposals/scheduling/resources.md#resource-quantities">
      kubernetes / community</a> GitHub repository.<br /><br />
      <strong>Type:</strong> Resource quantity.<br />
      <strong>Required</strong><br />
      <strong>Default:</strong> <em>n/a</em>
  </td>
  <td><code>50Gi</code></td>
</tr>
<tr>
  <td><code>spec.imagePullSecretName</code></td>
  <td>An existing Kubernetes docker-registry secret that can access the
  registry containing the MySQL image.<br /><br />
  <strong>Type:</strong> String<br />
  <strong>Required</strong><br />
  <strong>Default:</strong> <em>n/a</em></td>
  <td><code>tanzu-mysql-image-registry</code></td>
</tr>
<tr>
  <td><code>spec.storageClassName</code></td>
  <td>The StorageClass used for PVCs associated with MySQL instance Pods.
      Cannot be modified after the MySQL instance has been created.
      For available types, contact your Kubernetes admin.
      For information about the StorageClass concept, see the
      <a href="https://kubernetes.io/docs/concepts/storage/storage-classes/">
      Kubernetes documentation</a>.<br /><br />
      <strong>Type:</strong> String<br />
      <strong>Optional</strong><br />
      <strong>Default:</strong> Standard</td>
  <td><code>standard</code></td>
</tr>
<tr>
  <td><code>spec.serviceType</code></td>
  <td>The type of Service used to provide access to the MySQL database.
      Only <code>ClusterIP</code> and <code>LoadBalancer</code> are supported.
      For more information about Kubernetes ServiceTypes, see the
      <a href="https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types">
      Kubernetes documentation</a>.<br /><br />
      <strong>Type:</strong> String<br />
      <strong>Optional</strong><br />
      <strong>Default:</strong> ClusterIP</td>
  <td><code>LoadBalancer</code></td>
</tr>
<tr>
  <td><code>spec.version</code></td>
  <td>The version of the MySQL instance.<br /><br />
      <strong>Type:</strong> String<br />
      <strong>Optional</strong><br />
      <strong>Default:</strong> The value of <code>defaultInstanceVersion</code> set by the service administrator in the Tanzu MySQL Helm chart</td>
  <td><code>1.1.0</code></td>
</tr>
<tr>
  <td><code>spec.tls.secret.name</code></td>
  <td>The name of the Kubernetes secret containing the TLS certificate and private key used to support encrypted connections by clients.<br /><br />
  <strong>Type:</strong> String<br />
  <strong>Optional</strong><br />
  <strong>Default:</strong> <em>n/a</em></td>
  <td><code>mysql-tls-secret</code></td>
</tr>
<tr>
  <td><code>spec.highAvailability.enabled</code></td>
  <td>
  Whether the instance is a high-availability cluster (not single-node).
  After being set to <code>true</code>, cannot be modified.
  For information about high availability, see <a href="high-availability.html">Configuring MySQL Instances for High Availability</a>.<br /><br />
  <strong>Type:</strong> Boolean<br />
  <strong>Optional</strong><br />
  <strong>Default:</strong> False</td>
  <td><code>highAvailability.enabled: false</code></td>
</tr>
<tr>
  <td><code>spec.resources.mysql</code></td>
  <td>
  The maximum CPU and memory allowed for the MySQL container.
      If not specified, Kubernetes does its best effort to allocate necessary compute resources
      for this container.
      For more information about managing resources for containers,
      see the <a href="https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/">
      Kubernetes documentation</a>.<br /><br />
      <strong>Type:</strong> limits.cpu, limits.memory<br />
      <strong>Optional</strong><br />
      <strong>Default:</strong> Best effort</td>
  <td><code>limits.cpu: 3 , limits.memory: 800Mi</code></td>
</tr>
<tr>
  <td><code>spec.resources.mysql</code></td>
  <td>
  The minimum CPU and memory allowed for the MySQL container.
      If not specified, defaults to limits, if limits have been explicitly specified.
      For more information about limits, see the
      <a href="https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/">
      Kubernetes documentation</a>.<br /><br />
      <strong>Type:</strong> requests.cpu, requests.memory<br />
      <strong>Optional</strong><br />
      <strong>Default:</strong> Best effort</td>
  <td><code>requests.cpu: 2 , requests.memory: 500Mi</code></td>
</tr>
<tr>
  <td><code>spec.resources.mysqlSidecar</code></td>
  <td>The maximum CPU and memory allowed for the mysql-sidecar container.
      If not specified, Kubernetes does its best effort to allocate the necessary compute resources
      for this container.
      For more information about CPU and memory resources,
      see the <a href="https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/">
      Kubernetes documentation</a>.<br /><br /> 
      <strong>Type:</strong> limits.cpu, limits.memory<br />
      <strong>Optional</strong><br />
      <strong>Default:</strong> Best effort</td>
  <td><code>limits.cpu: 2 , limits.memory: 500Mi</code></td>
</tr>
<tr>
  <td><code>spec.resources.mysqlSidecar</code></td>
  <td>Describes the minimum CPU and memory allowed for the mysql-sidecar container.
      If left blank, defaults to limits, if limits have been explicitly specified.
      For more information about limits, see the
      <a href="https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/">
      Kubernetes documentation</a>.<br /><br />
      <strong>Type:</strong> requests.cpu, requests.memory<br />
      <strong>Optional</strong><br />
      <strong>Default:</strong> Best effort</td>
  <td><code>requests.cpu:&nbsp;1&nbsp;, requests.memory:&nbsp;200Mi</code>
  </td>
</tr>
<tr>
  <td><code>spec.resources.proxy</code></td>
  <td>Describes the maximum CPU and memory allowed for the proxy container. This container is only created if
      <code>spec.highAvailability.enabled</code> is <code>true</code>.
      If not specified, Kubernetes does its best effort to allocate the necessary compute resources
      for the proxy container.
      For more information about CPU and memory resources,
      see the <a href="https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/">
      Kubernetes documentation</a>.<br /><br />
      <strong>Type:</strong> limits.cpu, limits.memory<br />
      <strong>Optional</strong><br />
      <strong>Default:</strong> Best effort</td>
  <td><code>limits.cpu: 1000m, limits.memory: 256Mi</code></td>
</tr>
<tr>
  <td><code>spec.resources.proxy</code></td>
  <td>Describes the minimum CPU and memory allowed for the proxy container. This container is only created if
      <code>spec.highAvailability.enabled</code> is <code>true</code>.
      If not specified, defaults to limits, if limits have been explicitly specified.
      For more information about limits, see the
      <a href="https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/">
      Kubernetes documentation</a>.<br /><br />
      <strong>Type:</strong> requests.cpu, requests.memory<br />
      <strong>Optional</strong><br />
      <strong>Default:</strong> Best effort</td>
  <td><code>requests.cpu: 200m;, requests.memory: 48Mi</code>
  </td>
</tr>
<tr>
  <td><code>spec.resources.metrics</code></td>
  <td>Describes the minimum CPU and memory allowed for the metrics container `mysql-exporter`. This container is created during MySQL instance initialization.
      If not specified, defaults to limits, if limits have been explicitly specified.<br /><br />
      <strong>Type:</strong> requests.cpu, requests.memory<br />
      <strong>Optional</strong><br />
      <strong>Default:</strong> Best effort</td>
  <td><code>requests.cpu 100m, requests.memory: 32Mi</code>
  </td>
</tr>
<tr>
  <td><code>spec.resources.metrics</code></td>
  <td>Describes the limits of CPU and memory for the metrics container `mysql-exporter`. This container is created during MySQL instance initialization.
      <br /><br />
      <strong>Type:</strong> limits.cpu, limits.memory<br />
      <strong>Optional</strong><br />
      <strong>Default:</strong> Best effort
  </td>
  <td><code>limits.cpu: 250m, limits.memory: 75Mi</code>
  </td>
</tr>
<tr>
  <td><code>spec.persistentVolumeClaimPolicy</code></td>
  <td>Describes the PVC retention policy when the associated MySQL instance is deleted. 
    <br /><br />
    Values can be <code>Retain</code> or <code>Delete</code>.
    <br /><br />
    <strong>Type:</strong> String<br />
    <strong>Optional</strong><br />
    <strong>Default:</strong> Retain
  </td>
  </td>
  <td>Delete</td>
</tr>
<tr>
  <td><code>spec.databasePodConfig.affinity</code></td>
  <td>Affinity rules for the MySQL database pods
    <br /><br />
    For more information, see the <a href="https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity">Kubernetes documentation</a>.
    <br /><br />
    <strong>Type:</strong> Kubernetes Pod Affinity<br />
    <strong>Optional</strong><br />
    <strong>Default:</strong>Prefer that database pods for a given instance are scheduled for unique Kubernetes Nodes
  </td>
  <td>
      <code>
        ---
        apiVersion: with.sql.tanzu.vmware.com/v1
        kind: MySQL
        metadata:
           name: my-instance
        spec:
           storageSize: 1Gi
           databasePodConfig:
             affinity:
               podAntiAffinity:
                 requiredDuringSchedulingIgnoredDuringExecution:
                   - weight: 1
                     podAffinityTerm:
                       topologyKey: "kubernetes.io/hostname"
                       labelSelector:
                         matchExpressions:
                           - key: "app.kubernetes.io/component"
                             operator: In
                             values:
                               - database
                           - key: "app.kubernetes.io/instance"
                             operator: In
                             values:
                               - my-instance
      </code>
  </td>
</tr>
<tr>
  <td><code>spec.databasePodConfig.tolerations</code></td>
  <td>Configures Kubernetes Tolerations for the MySQL instance's database Pods
    <br /><br />
    For more information, see the <a href="https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/">Kubernetes documentation</a>.
    <br /><br />
    <strong>Type:</strong> Kubernetes Pod Tolerations<br />
    <strong>Optional</strong><br />
    <strong>Default:</strong>No default tolerations are configured by the Tanzu MySQL Operator
  </td>
  <td>
    <code>
    ---
    apiVersion: with.sql.tanzu.vmware.com/v1
    kind: MySQL
    metadata:
       name: my-instance
    spec:
       storageSize: 1Gi
       databasePodConfig:
         tolerations:
         - key: node.kubernetes.io/memory-pressure
           operator: "Exists"
           effect: "NoExecute"
           tolerationSeconds: 3600
    </code>
  </td>
</tr>
<tr>
  <td><code>spec.proxyPodConfig.affinity</code></td>
  <td>Affinity rules for the Proxy database pods
    <br /><br />
    <b>Used only when spec.highAvailability.enabled = true</b>
    For more information, see the <a href="https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity">Kubernetes documentation</a>.
    <br /><br />
    <strong>Type:</strong> Kubernetes Affinity configuration<br />
    <strong>Optional</strong><br />
    <strong>Default:</strong>Prefer that proxy pods are not scheduled on the same Kubernetes node.
  </td>
  <td>
      <code>
        ---
        apiVersion: with.sql.tanzu.vmware.com/v1
        kind: MySQL
        metadata:
           name: my-instance
        spec:
           storageSize: 1Gi
           proxyPodConfig:
             affinity:
               podAntiAffinity:
                 requiredDuringSchedulingIgnoredDuringExecution:
                   - weight: 1
                     podAffinityTerm:
                       topologyKey: "kubernetes.io/hostname"
                       labelSelector:
                         matchExpressions:
                           - key: "app.kubernetes.io/component"
                             operator: In
                             values:
                               - proxy
                           - key: "app.kubernetes.io/instance"
                             operator: In
                             values:
                               - my-instance
      </code>
  </td>
</tr>
<tr>
  <td><code>spec.proxyPodConfig.tolerations</code></td>
  <td>Configures Kubernetes Tolerations for the MySQL instance's proxy Pods
    <br /><br />
    <b>Used only when spec.highAvailability.enabled = true</b>
    For more information, see the <a href="https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/">Kubernetes documentation</a>.
    <br /><br />
    <strong>Type:</strong>Kubernetes Tolerations configuration<br />
    <strong>Optional</strong><br />
    <strong>Default:</strong>No default tolerations are configured by the Tanzu MySQL Operator
  </td>
  <td>
    <code>
    ---
    apiVersion: with.sql.tanzu.vmware.com/v1
    kind: MySQL
    metadata:
       name: my-instance
    spec:
       storageSize: 1Gi
       proxyPodConfig:
         tolerations:
         - key: node.kubernetes.io/memory-pressure
           operator: "Exists"
           effect: "NoExecute"
           tolerationSeconds: 3600
    </code>
  </td>
</tr>
</table>
